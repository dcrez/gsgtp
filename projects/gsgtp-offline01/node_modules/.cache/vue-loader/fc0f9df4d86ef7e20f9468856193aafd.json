{"remainingRequest":"C:\\Users\\danie\\GitHub\\dcrez.github.io\\projects\\gsgtp-offline\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\danie\\GitHub\\dcrez.github.io\\projects\\gsgtp-offline\\src\\components\\addHooks.vue?vue&type=template&id=0922f01f&","dependencies":[{"path":"C:\\Users\\danie\\GitHub\\dcrez.github.io\\projects\\gsgtp-offline\\src\\components\\addHooks.vue","mtime":1623939788138},{"path":"C:\\Users\\danie\\GitHub\\dcrez.github.io\\projects\\gsgtp-offline\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\danie\\GitHub\\dcrez.github.io\\projects\\gsgtp-offline\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\danie\\GitHub\\dcrez.github.io\\projects\\gsgtp-offline\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\danie\\GitHub\\dcrez.github.io\\projects\\gsgtp-offline\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXY+CiAgICAgICA8di1jYXJkIDpsb2FkaW5nPSJwZXJmb3JtaW5nUmVxdWVzdCI+CiAgICAgICA8di1jb250YWluZXI+CiAgICAgICAgIDx2LWNhcmQtdGl0bGU+CiAgICAgICAgIEFkZCBIb29rCiAgICAgICAgIDwvdi1jYXJkLXRpdGxlPgogICAgICAgICA8di1hbGVydCB2LWlmPSIhY3VycmVudFVzZXIiIGNvbG9yPSJlcnJvciIgZGFyaz4gIAogICAgICAgICAgIFlvdSBtdXN0IGJlIHNpZ25lZCBpbiB0byBhZGQgYSBob29rIC8gcmVnaXN0ZXIgZm9yIGEgcHVsbC4KICAgICAgICAgPC92LWFsZXJ0PgogICAgICAgICA8di1jYXJkLXRleHQ+CiAgICAgICAgICAgPHYtZm9ybT4KICAgICAgICAgICAgIDwhLS0gRmluZCBhIHB1bGwgLS0+CiAgICAgICAgICAgICAKCiAgICAgICAgICAgIDx2LW1lbnUgcmVmPSJtZW51IiB2LW1vZGVsPSJkYXRlUGlja2VyTWVudSIgOmNsb3NlLW9uLWNvbnRlbnQtY2xpY2s9ImZhbHNlIgogICAgICAgICAgICAgIDpyZXR1cm4tdmFsdWUuc3luYz0iZGF0ZSIgdHJhbnNpdGlvbj0ic2NhbGUtdHJhbnNpdGlvbiIgb2Zmc2V0LXkgbWluLXdpZHRoPSJhdXRvIj4KICAgICAgICAgICAgICA8dGVtcGxhdGUgdi1zbG90OmFjdGl2YXRvcj0ieyBvbiwgYXR0cnMgfSI+CiAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkIHYtbW9kZWw9Imhvb2tGb3JtLnB1bGxEYXRlIiBsYWJlbD0iQ2hvb3NlIGEgcHVsbCBkYXRlIiBwcmVwZW5kLWljb249Im1kaS1jYWxlbmRhciIgcmVhZG9ubHkKICAgICAgICAgICAgICAgICAgdi1iaW5kPSJhdHRycyIgdi1vbj0ib24iPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgPHYtZGF0ZS1waWNrZXIgdi1tb2RlbD0iaG9va0Zvcm0ucHVsbERhdGUiIHNjcm9sbGFibGUgOmFsbG93ZWQtZGF0ZXM9ImdldEFsbG93ZWREYXRlcyhwdWxsRGF0ZXMpIiBjb2xvcj0iZ3JlZW4gbGlnaHRlbi0xIgogICAgICAgICAgICAgICAgZXZlbnQtY29sb3I9ImJsdWUiPgogICAgICAgICAgICAgICAgPHYtc3BhY2VyPjwvdi1zcGFjZXI+CiAgICAgICAgICAgICAgICA8di1idG4gdGV4dCBjb2xvcj0icHJpbWFyeSIgQGNsaWNrPSJkYXRlUGlja2VyTWVudSA9IGZhbHNlIj4KICAgICAgICAgICAgICAgICAgQ2FuY2VsCiAgICAgICAgICAgICAgICA8L3YtYnRuPgogICAgICAgICAgICAgICAgPHYtYnRuIHRleHQgY29sb3I9InByaW1hcnkiIEBjbGljaz0iJHJlZnMubWVudS5zYXZlKGRhdGUpIj4KICAgICAgICAgICAgICAgICAgT0sKICAgICAgICAgICAgICAgIDwvdi1idG4+CiAgICAgICAgICAgICAgPC92LWRhdGUtcGlja2VyPgogICAgICAgICAgICA8L3YtbWVudT4KICAgICAgICAgICAgIDxkaXYgdi1pZj0ic2VsZWN0ZWRQdWxsIiBzdHlsZT0ibWFyZ2luLXRvcDotMTVweCI+CiAgICAgICAgICAgICAgPHN0cm9uZz57e3NlbGVjdGVkUHVsbC50aXRsZX19PC9zdHJvbmc+LCB7e3NlbGVjdGVkUHVsbC5jaXR5fX0sIHt7c2VsZWN0ZWRQdWxsLnN0YXRlfX0KICAgICAgICAgICAgICA8L2Rpdj4gCiAgICAgICAgICAgICA8IS0tIERldGVybWluZSBpZiBob29rIGlzIGZvciBhIG1lbWJlciAtLT4KICAgICAgICAgICAgIDx2LXN3aXRjaAogICAgICAgICAgICAgIHYtbW9kZWw9Imhvb2tNZW1iZXIiCiAgICAgICAgICAgICAgbGFiZWw9Ik1lbWJlciIKICAgICAgICAgICAgICBpbnNldAogICAgICAgICAgICAgIGNvbG9yPSJ3YXJuaW5nIgogICAgICAgICAgICAgPjwvdi1zd2l0Y2g+CiAgICAgICAgICAgICA8ZGl2IHYtaWY9Imhvb2tNZW1iZXIiPgogICAgICAgICAgICAgPHYtYXV0b2NvbXBsZXRlCiAgICAgICAgICAgICAgdi1tb2RlbD0iaG9va0Zvcm0ubWVtYmVyLnNlbGVjdGVkTWVtYmVyIgogICAgICAgICAgICAgIGxhYmVsPSJTZWxlY3QgbWVtYmVyIgogICAgICAgICAgICAgIDppdGVtcz0ibWVtYmVycyIKICAgICAgICAgICAgICBoaW50PSJTZWFyY2ggZm9yIHByaW1hcnkgbWVtYmVyIGFzc29jaWF0ZWQgdG8gdHJhY3Rvci4iCiAgICAgICAgICAgICAgaXRlbS10ZXh0PSJmdWxsTmFtZSIKICAgICAgICAgICAgICBpdGVtLXZhbHVlPSJ1c2VySWQiCiAgICAgICAgICAgICAgcmV0dXJuLW9iamVjdAogICAgICAgICAgICAgIGNoaXBzCiAgICAgICAgICAgICAgZGVsZXRhYmxlLWNoaXBzCiAgICAgICAgICAgICA+CiAgICAgICAgICAgICA8L3YtYXV0b2NvbXBsZXRlPgogICAgICAgICAgICAgIDxkaXYgdi1pZj0iaG9va0Zvcm0ubWVtYmVyLnNlbGVjdGVkTWVtYmVyICE9IHt9Ij4KICAgICAgICAgICAgICAgIDEyM1MKICAgICAgICAgICAgIDx2LWF1dG9jb21wbGV0ZSB2LW1vZGVsPSJob29rRm9ybS5tZW1iZXIudmVoaWNsZSIKICAgICAgICAgICAgICBsYWJlbD0iRmluZCB2ZWhpY2xlIgogICAgICAgICAgICAgIDppdGVtcz0ib25saW5lTWVtYmVyIgogICAgICAgICAgICAgIGhpbnQ9IlNlbGVjdCBhIHZlaGljbGUuIgogICAgICAgICAgICAgIGl0ZW0tdGV4dD0ibmFtZSIKICAgICAgICAgICAgICBpdGVtLXZhbHVlPSJpZCIKICAgICAgICAgICAgICByZXR1cm4tb2JqZWN0CiAgICAgICAgICAgICAgY2hpcHMKICAgICAgICAgICAgICBkZWxldGFibGUtY2hpcHM+PC92LWF1dG9jb21wbGV0ZT4KICAgICAgICAgICAgICA8di1hdXRvY29tcGxldGUKICAgICAgICAgICAgICB2LW1vZGVsPSJob29rRm9ybS52ZWhpY2xlQ2xhc3MiCiAgICAgICAgICAgICAgbGFiZWw9IlNlbGVjdCB2ZWhpY2xlIGNsYXNzIgogICAgICAgICAgICAgIDppdGVtcz0iaG9va0Zvcm0ubWVtYmVyLnZlaGljbGUuY2xhc3NlcyIKICAgICAgICAgICAgICBoaW50PSJTZWxlY3QgYSB2ZWhpY2xlIGNsYXNzIgogICAgICAgICAgICAgIGl0ZW0tdGV4dD0ibmFtZSIKICAgICAgICAgICAgICBpdGVtLXZhbHVlPSJuYW1lIgogICAgICAgICAgICAgIHYtaWY9Imhvb2tGb3JtLm1lbWJlci52ZWhpY2xlIgogICAgICAgICAgICAgIG11bHRpcGxlCiAgICAgICAgICAgICAgcmV0dXJuLW9iamVjdAogICAgICAgICAgICAgIGNoaXBzCiAgICAgICAgICAgICAgZGVsZXRhYmxlLWNoaXBzCiAgICAgICAgICAgICA+CiAgICAgICAgICAgICA8L3YtYXV0b2NvbXBsZXRlPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAKICAgICAgICAgICAgIDxkaXYgdi1lbHNlPgogICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkIHYtbW9kZWw9Imhvb2tGb3JtLm5vbk1lbWJlci52ZWhpY2xlIiBsYWJlbD0iVmVoaWNsZSIgaGludD0iUHJvdmlkZSBhIHRyYWN0b3IgbmFtZS4iPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICA8di1hdXRvY29tcGxldGUKICAgICAgICAgICAgICB2LW1vZGVsPSJob29rRm9ybS52ZWhpY2xlQ2xhc3MiCiAgICAgICAgICAgICAgbGFiZWw9IlNlbGVjdCB2ZWhpY2xlIGNsYXNzIgogICAgICAgICAgICAgIDppdGVtcz0idmVoaWNsZUNsYXNzZXMiCiAgICAgICAgICAgICAgaGludD0iU2VsZWN0IGEgdmVoaWNsZSBjbGFzcyIKICAgICAgICAgICAgICBpdGVtLXRleHQ9Im5hbWUiCiAgICAgICAgICAgICAgaXRlbS12YWx1ZT0ibmFtZSIKICAgICAgICAgICAgICB2LWlmPSJob29rRm9ybS5ub25NZW1iZXIudmVoaWNsZSIKICAgICAgICAgICAgICBtdWx0aXBsZQogICAgICAgICAgICAgIHJldHVybi1vYmplY3QKICAgICAgICAgICAgICBjaGlwcwogICAgICAgICAgICAgIGRlbGV0YWJsZS1jaGlwcwogICAgICAgICAgICAgPgogICAgICAgICAgICAgPC92LWF1dG9jb21wbGV0ZT4KICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGQgdi1tb2RlbD0iaG9va0Zvcm0ucHVsbGVyTmFtZSIgbGFiZWw9IlB1bGxlciBOYW1lIiBoaW50PSJSZXF1aXJlZCBmb3IgYWxsIGd1ZXN0IGhvb2tzLiAiPjwvdi10ZXh0LWZpZWxkPgoKICAgICAgICAgICAgIDx2LXN3aXRjaCB2LWlmPSJ1c2VyUHJvZmlsZS5yb2xlID09PSAnYWRtaW4nIgogICAgICAgICAgICAgIHYtbW9kZWw9Imhvb2tGZWVzIgogICAgICAgICAgICAgIGluc2V0CiAgICAgICAgICAgICAgY29sb3I9ImluZm8iCiAgICAgICAgICAgICAgbGFiZWw9Ikhvb2sgRmVlcyIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgPC92LXN3aXRjaD4KICAgICAgICAgICAgICA8di1hbGVydCBkZW5zZSBvdXRsaW5lZCB0eXBlPSJzdWNjZXNzIiB2LWlmPSJob29rRm9ybS5zdWNjZXNzTWVzc2FnZSAhPSAnJyI+e3tob29rRm9ybS5zdWNjZXNzTWVzc2FnZX19PC92LWFsZXJ0PgogICAgICAgICAgICAgIDx2LWFsZXJ0IGRlbnNlIG91dGxpbmVkIHR5cGU9ImVycm9yIiB2LWlmPSJob29rRm9ybS5lcnJvck1lc3NhZ2UgIT0gJyciPnt7aG9va0Zvcm0uZXJyb3JNZXNzYWdlfX08L3YtYWxlcnQ+CiAgICAgICAgICAgICAgPHYtY2FyZC1hY3Rpb25zPgogICAgICAgICAgICAgICAgPHYtc3BhY2VyPjwvdi1zcGFjZXI+CiAgICAgICAgICAgICAgICA8di1idG4gdGV4dCBAY2xpY2s9ImRpc21pc3MobSkiPkNhbmNlbDwvdi1idG4+CiAgICAgICAgICAgICAgICA8di1idG4gb3V0bGluZWQgY29sb3I9InN1Y2Nlc3MiIHYtaWY9Imhvb2tNZW1iZXIiIEBjbGljay5zdG9wPSJhZGRNZW1iZXJIb29rIj5BZGQgbWVtYmVyIGhvb2s8L3YtYnRuPgogICAgICAgICAgICAgICAgPHYtYnRuIG91dGxpbmVkIGNvbG9yPSJzdWNjZXNzIiB2LWlmPSIhaG9va01lbWJlciIgQGNsaWNrLnN0b3A9ImFkZEd1ZXN0SG9vayI+QWRkIGd1ZXN0IGhvb2s8L3YtYnRuPgogICAgICAgICAgICAgIDwvdi1jYXJkLWFjdGlvbnM+CiAgICAgICAgICAgPC92LWZvcm0+CiAgICAgICAgIDwvdi1jYXJkLXRleHQ+CiAgICAgICA8L3YtY29udGFpbmVyPgogICAgICAgICA8L3YtY2FyZD4KICAgCjwvZGl2Pgo="},null]}