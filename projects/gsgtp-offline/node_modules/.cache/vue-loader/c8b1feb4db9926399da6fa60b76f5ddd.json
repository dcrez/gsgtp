{"remainingRequest":"C:\\Users\\danie\\GitHub\\dcrez.github.io\\projects\\gsgtp-offline\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\danie\\GitHub\\dcrez.github.io\\projects\\gsgtp-offline\\src\\views\\login.vue?vue&type=template&id=308aa2fe&","dependencies":[{"path":"C:\\Users\\danie\\GitHub\\dcrez.github.io\\projects\\gsgtp-offline\\src\\views\\login.vue","mtime":1580525171195},{"path":"C:\\Users\\danie\\GitHub\\dcrez.github.io\\projects\\gsgtp-offline\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\danie\\GitHub\\dcrez.github.io\\projects\\gsgtp-offline\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\danie\\GitHub\\dcrez.github.io\\projects\\gsgtp-offline\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\danie\\GitHub\\dcrez.github.io\\projects\\gsgtp-offline\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\danie\\GitHub\\dcrez.github.io\\projects\\gsgtp-offline\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}