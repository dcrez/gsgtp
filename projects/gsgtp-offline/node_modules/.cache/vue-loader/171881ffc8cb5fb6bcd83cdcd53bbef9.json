{"remainingRequest":"C:\\Users\\danie\\GitHub\\dcrez.github.io\\projects\\gsgtp-offline\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\danie\\GitHub\\dcrez.github.io\\projects\\gsgtp-offline\\src\\views\\pullDetails.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\danie\\GitHub\\dcrez.github.io\\projects\\gsgtp-offline\\src\\views\\pullDetails.vue","mtime":1617658338733},{"path":"C:\\Users\\danie\\GitHub\\dcrez.github.io\\projects\\gsgtp-offline\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\danie\\GitHub\\dcrez.github.io\\projects\\gsgtp-offline\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\danie\\GitHub\\dcrez.github.io\\projects\\gsgtp-offline\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\danie\\GitHub\\dcrez.github.io\\projects\\gsgtp-offline\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\danie\\GitHub\\dcrez.github.io\\projects\\gsgtp-offline\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCg0KQG1lZGlhIHByaW50IHsNCmJvZHkgew0KICAgIG92ZXJmbG93OiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCn0NCg0KLnBnQnJlYWsgew0KICAgIHBhZ2UtYnJlYWstYWZ0ZXI6IGFsd2F5czsNCiAgICBtYXJnaW4tdG9wOjUwcHg7DQp9DQoNCi5uby1wcmludCB7DQogICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50Ow0KfQ0KDQoucHVsbERldGFpbHMgew0KICBwb3NpdGlvbjpmaXhlZDsNCiAgdG9wOjA7DQogIHdpZHRoOiAxMDAlOw0KfQ0KDQp9DQoNCg=="},{"version":3,"sources":["pullDetails.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwaA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","file":"pullDetails.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"display-1 mt-5 mb-5 font-weight-light no-print\">\r\n      Pull Details\r\n      <v-btn class=\"mb-3 float-right\" text color=\"red darken-3\" @click=\"goBack\">\r\n      <v-icon class=\"mr-4\">fad fa-arrow-circle-left</v-icon> Go back\r\n    </v-btn></div>\r\n\r\n    <v-dialog v-model=\"dialog\" max-width=\"400px\">\r\n      <v-card>\r\n        \r\n        <v-card-title>\r\n          <span style=\"color:red\" class=\"mr-3\">{{editedItem.pull.title}} </span>\r\n          {{editedItem.vehicleClass}}\r\n        </v-card-title>\r\n        <v-card-subtitle><strong>Vehicle:</strong> {{editedItem.vehicle}}, <strong>Puller:</strong> <span v-if=\"editedItem.pullerName != ''\">{{editedItem.pullerName}}</span>\r\n        <span v-else>{{editedItem.member.fullName}}</span>\r\n\r\n\r\n        </v-card-subtitle>\r\n        <v-banner v-if=\"editHookErrMessage\">{{editHookErrMessage}}</v-banner>\r\n        <v-card-text><v-text-field v-model=\"editedItem.distance\" label=\"Distance\" color=\"red darken-3\"></v-text-field>\r\n        <v-text-field v-model=\"editedItem.place\" label=\"Place\" color=\"red darken-3\"></v-text-field>\r\n        <v-text-field v-model=\"editedItem.points\" label=\"Points\" color=\"red darken-3\" type=\"number\" v-if=\"editedItem.isMember\"></v-text-field>\r\n        <v-checkbox v-model=\"editedItem.dq\" label=\"DQ?\" color=\"red darken-3\"></v-checkbox>\r\n        <v-checkbox v-model=\"editedItem.isMember\" label=\"Member?\" color=\"green darken-3\" disabled></v-checkbox>\r\n        </v-card-text>\r\n        <v-card-actions>\r\n          <v-spacer></v-spacer>\r\n          <v-btn text @click.stop=\"close\">Cancel</v-btn>\r\n          <v-btn color=\"green\" outlined @click.stop=\"saveItem()\">Save</v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n\r\n    <!--<v-card :hidden=\"editPull\">\r\n      <v-container>\r\n        <v-card-title>Edit Pull</v-card-title>\r\n        <v-card-text>\r\n          <v-text-field v-model=\"editedPull.title\" label=\"Title\"></v-text-field>\r\n          <v-text-field v-model=\"editedPull.description\" label=\"Description (Optional)\"></v-text-field>\r\n          <v-text-field v-model=\"editedPull.address\" label=\"Address\"></v-text-field>\r\n          <v-text-field v-model=\"editedPull.city\" label=\"City\"></v-text-field>\r\n          <v-text-field v-model=\"editedPull.date\" label=\"Date\"></v-text-field>\r\n          <v-text-field v-model=\"editedPull.time\" label=\"Time\"></v-text-field>\r\n          <v-text-field v-model=\"editedPull.img\" label=\"Image URL\"></v-text-field>\r\n          <v-row class=\"sponsors\">\r\n            <v-col md=\"6\">\r\n            <v-text-field prepend-icon=\"fa-tractor\" label=\"Sponsor Name\" v-model=\"sponsor.name\">\r\n            </v-text-field>\r\n            </v-col>\r\n            <v-col md=\"5\">\r\n            <v-text-field prepend-icon=\"fa-tractor\" label=\"Sponsor Logo URL\" v-model=\"sponsor.logo\">\r\n            </v-text-field>\r\n            </v-col>\r\n            <v-col md=\"1\">\r\n            <v-btn depressed color=\"primary\" dark @click=\"addSponsor\">Add</v-btn>\r\n            </v-col>\r\n        </v-row>\r\n        </v-card-text>\r\n        <v-card-actions>\r\n          <v-spacer></v-spacer>\r\n          <v-btn text @click=\"cancelUpdate\">Cancel</v-btn>\r\n          <v-btn color=\"green\" outlined @click=\"modifyPull(pull)\">Save</v-btn>\r\n        </v-card-actions>\r\n      </v-container>\r\n    </v-card>-->\r\n    \r\n    <div\r\n    class=\"pullDetails d-none d-print-block\"\r\n    >\r\n    <div class=\"display-1\" style=\"text-transform: uppercase;\">{{pull.title}}</div>\r\n    <div class=\"overline\">{{pull.date}} {{pull.time}} </div>\r\n    <div class=\"overline\">{{pull.city}} {{pull.state}} </div>\r\n    </div>\r\n\r\n\r\n    <v-card class=\"mx-auto no-print\">\r\n      <v-img :src=\"pull.img\" height=\"200\" v-if=\"pull.img\"></v-img>\r\n      <v-card-title>{{pull.title}}</v-card-title>\r\n      <v-card-subtitle>{{pull.date | moment(\"dddd, MMMM Do YYYY\")}} {{pull.time}}</v-card-subtitle>\r\n      <v-card-text>{{pull.address}}, {{pull.city}}<br>\r\n        {{pull.description}}\r\n        \r\n      </v-card-text>\r\n      <v-card-actions class=\"no-print\">\r\n        <v-spacer></v-spacer>\r\n        <v-btn fab text color=\"error\" v-if=\"admin == true\" @click=\"deletePull(pull)\"><font-awesome-icon icon=\"trash-alt\"></font-awesome-icon></v-btn>\r\n        <v-btn fab text color=\"success\" v-if=\"admin == true\" @click=\"updatePull(pull)\"><font-awesome-icon icon=\"highlighter\"></font-awesome-icon></v-btn>\r\n        <!-- Negative days are for days in the future, positive days are for days in the past //&& daysFromNow >= -4  && daysFromNow <= 1-->\r\n        <v-btn text color=\"green\" v-if=\"pull.track != 'N/A' && daysFromNow >= -4  && daysFromNow <= 1\" @click.stop=\"addHookDialog = true\" >Register</v-btn>\r\n      </v-card-actions>\r\n    <!--<v-sparkline :value=\"distances\" type=\"trend\" auto-line-width=\"true\" show-labels=\"true\"></v-sparkline>-->\r\n    <v-expand-transition>\r\n      <v-card v-if=\"revealEdit\"\r\n      class=\"transition-fast-in-fast-out v-card--reveal\"\r\n        style=\"height: 100%;\"\r\n      >\r\n\r\n      <v-container>\r\n        <v-card-title>Edit Pull</v-card-title>\r\n        <v-card-text>\r\n          <v-text-field v-model=\"editedPull.title\" label=\"Title\"></v-text-field>\r\n          <v-text-field v-model=\"editedPull.description\" label=\"Description (Optional)\"></v-text-field>\r\n          <v-text-field v-model=\"editedPull.address\" label=\"Address\"></v-text-field>\r\n          <v-text-field v-model=\"editedPull.city\" label=\"City\"></v-text-field>\r\n          <v-text-field v-model=\"editedPull.date\" label=\"Date\"></v-text-field>\r\n          <v-text-field v-model=\"editedPull.time\" label=\"Time\"></v-text-field>\r\n          <v-text-field v-model=\"editedPull.img\" label=\"Image URL\"></v-text-field>\r\n          <v-row class=\"sponsors\">\r\n            <v-col md=\"6\">\r\n            <v-text-field prepend-icon=\"fa-tractor\" label=\"Sponsor Name\" v-model=\"sponsor.name\">\r\n            </v-text-field>\r\n            </v-col>\r\n            <v-col md=\"5\">\r\n            <v-text-field prepend-icon=\"fa-tractor\" label=\"Sponsor Logo URL\" v-model=\"sponsor.logo\">\r\n            </v-text-field>\r\n            </v-col>\r\n            <v-col md=\"1\">\r\n            <v-btn depressed color=\"primary\" dark @click=\"addSponsor\">Add</v-btn>\r\n            </v-col>\r\n        </v-row>\r\n        </v-card-text>\r\n        <v-card-actions>\r\n          <v-spacer></v-spacer>\r\n          <v-btn text @click=\"cancelUpdate\">Cancel</v-btn>\r\n          <v-btn color=\"green\" outlined @click=\"modifyPull(pull)\">Save</v-btn>\r\n        </v-card-actions>\r\n      </v-container>\r\n      \r\n      </v-card>\r\n    </v-expand-transition>\r\n    </v-card>\r\n\r\n    <div v-if=\"pull.track == 'N/A'\" class=\"mt-4\">\r\n      <v-banner two-line color=\"green\">\r\n        <v-avatar slot=\"icon\" size=\"60px\">\r\n          <v-icon dark>far fa-person-sign</v-icon>\r\n        </v-avatar>\r\n        No tractors necessary! This is an event where we all meet up and talk shop.\r\n      </v-banner>\r\n    </div>\r\n    <div v-else>\r\n\r\n<v-container class=\"mt-5\" v-if=\"sponsors.length > 0\">\r\n  \r\n<h2 class=\"overline\">Sponsored by</h2>\r\n<v-row>\r\n<v-col v-for=\"s in sponsors\" :key=\"s.id\" class=\"d-flex align-center align-content-start\" xs=\"12\" sm=\"6\" md=\"3\" >\r\n     \r\n         <v-img :src=\"s.logo\" max-width=\"70\" class=\"mx-auto\"/>\r\n         <div class=\"\">{{s.name}} </div>\r\n        \r\n</v-col>\r\n</v-row>\r\n</v-container>\r\n\r\n      <!--<v-slide-group multiple show-arrows>\r\n        <v-slide-item v-for=\"n in classes\" :key=\"n['.index']\">\r\n          <v-btn class=\"mx-2 mt-5\" active-class=\"primary white--text\" depressed :to=\"classHash(n)\">{{n}}</v-btn>\r\n        </v-slide-item>\r\n      </v-slide-group>-->\r\n      <div v-for=\"c in classes\" :key=\"c['.index']\" class=\"pgBreak\">\r\n        \r\n        <v-toolbar class=\"mt-5 font-weight-black\" elevation=\"0\" style=\"text-transform: uppercase;\" >\r\n          <v-toolbar-title v-bind:id=\"classId(c)\">{{c}}</v-toolbar-title>\r\n          \r\n          </v-toolbar>\r\n        <v-simple-table v-if=\"hooks.vehicleClass = c\" dark>\r\n          \r\n          <thead>\r\n            <tr>\r\n              <th class=\"text-left\">Vehicle</th>\r\n              <th class=\"text-left\">Puller</th>\r\n              <th class=\"text-left\">Distance</th>\r\n              <th class=\"text-left\">Points</th>\r\n              <th class=\"text-left\" v-if=\"admin == true\">Update</th>\r\n              <th class=\"text-left\" v-if=\"admin == true\">Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody v-for=\"(hook) in hooks\" :key=\"hook['.key']\">\r\n            <tr v-if=\"hook.vehicleClass == c\">\r\n              <span hidden>{{hook.id}}</span>\r\n              <td>{{hook.vehicle}} </td>\r\n              <td v-if=\"hook.pullerName != ''\">{{hook.pullerName}}</td>\r\n              <td v-else>{{hook.member.fullName}}</td>\r\n              <td>{{hook.distance}}</td>\r\n              <td v-if=\"hook.isMember && hook.duesPaid\">{{hook.points}}</td>\r\n              <td v-else><font-awesome-icon icon=\"lock\"></font-awesome-icon></td>\r\n              <td v-if=\"admin == true\">\r\n                <font-awesome-icon @click=\"editItem(hook)\" icon=\"pencil-alt\" color=\"white\"></font-awesome-icon>\r\n              </td>\r\n              <td v-if=\"admin == true\">\r\n                <font-awesome-icon @click=\"deleteItem(hook)\" class=\"ml-3\" color=\"white\" icon=\"trash-alt\"></font-awesome-icon>\r\n                \r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n\r\n        </v-simple-table>\r\n       \r\n\r\n      </div>\r\n    </div>\r\n     <v-dialog v-model=\"addHookDialog\" >\r\n        <addHook style=\"background-color:white !important;\" :dateRef='pull.date'></addHook>\r\n      </v-dialog>\r\n  </div>\r\n\r\n\r\n\r\n</template>\r\n\r\n<script>\r\n  import {\r\n    fb,db\r\n  } from '../../firebaseconfig.js'\r\n  import {\r\n    mapState\r\n  } from 'vuex'\r\nimport addHook from '@/components/addHooks.vue'\r\n\r\n  export default {\r\n    name: 'pullDetails',\r\n    data() {\r\n      return {\r\n        pull: {},\r\n        hooks: {},\r\n        addHookDialog: false,\r\n        editPull: true,\r\n        editedPull: {\r\n          title: '',\r\n          id: '',\r\n          time: '',\r\n          description: '',\r\n          address: '',\r\n          img: ''\r\n        },\r\n        searchClass: '',\r\n        sponsor: {\r\n          name: '',\r\n          logo: '',\r\n        },\r\n        sponsors: {},\r\n        editHookErrMessage: '',\r\n        graphLabels: [],\r\n        graphValues: [],\r\n        filterHooks: '',\r\n        dialog: false,\r\n        revealEdit: false,\r\n        editedItem: {\r\n          id: '',\r\n          title: '',\r\n          distance: null,\r\n          place: '',\r\n          points: 0,\r\n          isMember: '',\r\n          pull: {},\r\n          dq: false\r\n        }\r\n      }\r\n    },\r\n    components: {addHook},\r\n    firestore() {\r\n      let currentPull = this.$route.params.id\r\n      return {\r\n        pull: db.collection('pulls').doc(currentPull),\r\n        sponsors: db.collection('pulls').doc(currentPull).collection(\"sponsors\"),\r\n        hooks: db.collection('hooks').where(\"pullId\", \"==\", currentPull).orderBy(\"vehicleClass\", \"asc\")\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapState(['currentUser', 'userProfile']),  \r\n      byVehicleClass() {\r\n        return _.chain(this.hooks).groupBy(\"vehicleClass\")\r\n      },\r\n      admin: function() { \r\n      let admin \r\n      if (this.$store.state.userProfile.role == 'admin') {return admin = true} else {return admin = false}\r\n      return admin\r\n      },\r\n    distances() {\r\n      let distance = this.hooks.map(hook => hook.distance)\r\n      console.log(distance)\r\n      let hookNumbers = distance.map(function (x) {return parseInt(x,10)})\r\n      console.log(hookNumbers)\r\n      return hookNumbers\r\n    },\r\n    classes() {\r\n     const unique = [...new Set(this.hooks.map(hook => hook.vehicleClass))]\r\n      \r\n      return unique\r\n    },\r\n    daysFromNow() {\r\n      var now = new Date();\r\n      var pullDate = new Date(this.pull.date);\r\n      var differenceInTime = now.getTime() - pullDate.getTime()\r\n      var differenceInDays = differenceInTime / (1000*3600*24)\r\n      return differenceInDays\r\n    },\r\n    admin: function() { \r\n      let admin \r\n      if (this.$store.state.userProfile.role == 'admin') {return admin = true} else {return admin = false}\r\n      return admin\r\n      }\r\n    },\r\n    methods: {\r\n      goBack() {\r\n        this.$router.go(-1)\r\n      },\r\n      deletePull (pull) {\r\n           db.collection('pulls').doc(pull.id).delete();\r\n           this.$router.go(-1)\r\n       },\r\n      editItem(hook) {\r\n        this.editedItem = Object.assign({}, hook)\r\n        this.editedItem.id = hook.id\r\n        this.dialog = true\r\n      },\r\n      modifyPull(pull){\r\n        let pullUpdate = this.editedPull.id\r\n        let pullRef = db.collection(\"pulls\").doc(pullUpdate)\r\n\r\n        var pullData = {\r\n          address: this.editedPull.address,\r\n          city: this.editedPull.city,\r\n          date: this.editedPull.date,\r\n          description: this.editedPull.description,\r\n          points: this.editedPull.points,\r\n          state: this.editedPull.state,\r\n          time: this.editedPull.time,\r\n          title: this.editedPull.title,\r\n          track: this.editedPull.track,\r\n          img: this.editedPull.img\r\n        }\r\n\r\n        pullRef.update(pullData)\r\n        this.editedPull = !this.editedPull\r\n        this.revealEdit = !this.revealEdit\r\n      },\r\n      updatePull(pull) {\r\n        this.revealEdit = !this.revealEdit\r\n        this.editedPull = Object.assign({}, pull)\r\n        this.editedPull.id = pull.id\r\n        this.editPull = !this.editPull\r\n      },\r\n      cancelUpdate() {\r\n        this.editedPull = {}\r\n        this.editedPull.id = {}\r\n        this.editPull = !this.editPull\r\n        this.revealEdit = !this.revealEdit\r\n      },\r\n      saveItem() {\r\n        // Declare variables in order to pass Ids to Firestore\r\n        let hookUpdate = this.editedItem.id\r\n        let hookClass = this.editedItem.vehicleClass\r\n        let hookVehicle = this.editedItem.vehicleName\r\n        let hookYear = this.editedItem.pointsYear\r\n        let hookDate = this.editedItem.pull\r\n        let isMember\r\n        if (this.editedItem.isMember) {\r\n          isMember = this.editedItem.isMember\r\n        } else {isMember = false}\r\n\r\n        // Shorten reference paths for Firestore\r\n        let hooksRef = db.collection('hooks').doc(hookUpdate)\r\n        \r\n        // What gets updated with a hook\r\n        var hooksData = {\r\n          date: this.editedItem.pull,\r\n          distance: this.editedItem.distance,\r\n          place: this.editedItem.place,\r\n          points: parseInt(this.editedItem.points),\r\n          dq: this.editedItem.dq,\r\n          isMember: isMember,\r\n          updatedBy: this.currentUser.uid,\r\n          updated: new Date()\r\n        }\r\n\r\n        // What gets overwritten with points\r\n        hooksRef.update(hooksData)\r\n        this.close()\r\n      },\r\n      close() {\r\n        this.dialog = false\r\n        setTimeout(() => {\r\n          this.editedItem = Object.assign({}, this.defaultItem)\r\n        }, 300)\r\n      },\r\n      deleteItem(hook) {\r\n        db.collection('hooks').doc(hook.id).delete();\r\n      },\r\n      sortBy(value) {\r\n        let hooks = _.sortBy(this.hooks, [value, 'desc'])\r\n        return hooks\r\n      },\r\n      classId(item) {\r\n        return item.toLowerCase().split(\" \").join(\"-\")\r\n      },\r\n      classHash(item) {\r\n        return '#'+item.toLowerCase().split(\" \").join(\"-\")\r\n      },\r\n      addSponsor() {\r\n            // start transition/loading view\r\n            let doc = this.editedPull.id\r\n            \r\n            // add pull to Firestore\r\n            db.collection(\"pulls\").doc(doc).collection(\"sponsors\").add({\r\n                name: this.sponsor.name,\r\n                logo: this.sponsor.logo,\r\n                created: new Date(),\r\n                createdBy: this.currentUser.uid\r\n            }).then(function(docRef) {\r\n                console.log(\"Sponsor written with ID: \", docRef)\r\n            })},\r\n      editPullRecord() {\r\n\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n\r\n@media print {\r\nbody {\r\n    overflow: auto;\r\n    height: auto;\r\n}\r\n\r\n.pgBreak {\r\n    page-break-after: always;\r\n    margin-top:50px;\r\n}\r\n\r\n.no-print {\r\n    display: none !important;\r\n}\r\n\r\n.pullDetails {\r\n  position:fixed;\r\n  top:0;\r\n  width: 100%;\r\n}\r\n\r\n}\r\n\r\n</style>"]}]}